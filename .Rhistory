row.names(platano_1)
summary(platano_1)
#Ajustar el formato de la fecha, utilizando la función as.Date
is(platano_1)
platano_2 <- tibble(platano_1)
is(platano_2)
is(platano_1$FECHA_SIEMBRA)
is(as.Date(platano_1$FECHA_SIEMBRA,"%m/%d/%Y"))
platano_2 <- platano_2%>%mutate(FECHA_SIEMBRA=as.Date(FECHA_SIEMBRA,"%m/%d/%Y"))
platano_2
#Calcular el rendimiento (PN_ANIO/AREA_UM) y agregarlo directamente usando $.
rendimiento <- platano_2$PN_ANIO/platano_2$AREA_UM
rendimiento
platano_2 <- cbind(plantano_2, rendimiento)
head(platano_2)
#Realizar análisis exploratorio de datos para cada una de las variables de la base de datos.
#(Medidas de tendencia central y dispersión; complementar con gráficos; hacer matriz de correlación para variables cuantitativas)
#medidas de tendencia central
mean(platano_2$NO_ARBOLES)
mean(platano_2$rendimiento)
mean(platano_2$AREA_UM)
mean(platano_2$ALT_LOTE)
mean(platano_2$EDAD)
median(platano_2$NO_ARBOLES)
median(platano_2$rendimiento)
median(platano_2$AREA_UM)
median(platano_2$ALT_LOTE)
median(platano_2$EDAD)
#medidas de dispercion
#la correlacion solo para base de datos numerica
cor_platano_2 <- cor(platano_2$NO_ARBOLES,platano_2$AREA_UM)
cor_platano_5 <- cor(platano_2$NO_ARBOLES,platano_2$PN_ANIO)
cor_platano_2
#plot para graficar tipo correlacion
plot(cor_platano_2)
#Hacer un gráfico de puntos Edad vs Rendimiento, utilizando la función plot; indique
#la media de rendimiento dentro del gráfico, utilizando abline.
plot(platano_2$EDAD,platano_2$AREA_UM, xlab = "Edad planta", ylab = "rendimiento" ,
pch = 20, col = "red", main = "Correlación edad/rendimiento")
?abline
pch = 20, col = "red", main = "Correlación edad/rendimiento", abline (median)
pch = 20, col = "red", main = "Correlación edad/rendimiento"
plot(platano_2$EDAD,platano_2$AREA_UM, xlab = "Edad planta", ylab = "rendimiento" ,
pch = 20, col = "red", main = "Correlación edad/rendimiento",
abline(v = mean(platano_2$rendimiento, na.rm = T), lty = 2))
plot(platano_2$EDAD,platano_2$AREA_UM, xlab = "Edad planta", ylab = "rendimiento" ,
pch = 20, col = "red", main = "Correlación edad/rendimiento")
abline(v = mean(platano_2$rendimiento, na.rm = T), lty = 2))
abline(v = mean(platano_2$rendimiento, na.rm = T), lty = 2)
abline
ggplot(airquality, aes(x=PATRON_USANDO, y=MARCO DE SIEMBRE))+geom_bar(aes(colours=factor(Month)))
ggplot(airquality, aes(x=PATRON_USANDO, y=MARCO DE SIEMBRE))+geom_bar())
ggplot(airquality, aes(x=PATRON_USANDO, y=MARCO DE SIEMBRE))+geom_bar()
ggplot(platano_2, aes(x=PATRON_USANDO, y=MARCO DE SIEMBRE))+geom_bar()
airquality
head(airquality)
summary(airquality)
dim(airquality)
complete.cases(airquality)
airq <- airquality[complete.cases(airquality),]
summary(airq)
dim(airq)
cor.data <- cor(airq)
cor.data
plot(cor.data)
plot(airq)
plot(airq$Temp,airq$Ozone, xlab = "Temperatura (degrees F)", ylab = "Ozone (ppb)")
?plot
plot(airq$Temp,airq$Ozone, xlab = "Temperatura (degrees F)", ylab = "Ozone (ppb)")
plot(airq$Temp,airq$Ozone, xlab = "Temperatura (degrees F)", ylab = "Ozone (ppb)" ,
pch = 20, col = "red", main = "Temp vs Ozone")
png("Resultados/hist_ozone.png", width = 520, height = 480)
hist(airquality$Ozone, breaks = 13, ylim = c(0,30), col='orange', xlab="", main="")
box()
abline(v = mean(airquality$Ozone, na.rm = T), lty = 2)
text(50,25, "MU = 42.13")
rug(airquality$Ozone)
boxplot(airquality$Solar.R)
boxplot(airquality$Solar.R~airquality$Month)
with(airquality, {boxplot(Solar.R~Month, col = "blue")})
tabMeses <- table(airquality$Month)
barplot(tabMeses, ylim = c(0,35))
box()
pie(tabMeses)
library(ggplot2)
str(trigo)
trigo <- read.csv("Datos/baseTrigo.csv", row.names = 1, stringsAsFactors = T)
head(trigo, 10)
head(trigo)
setwd("D:/CURSO_R2/Analisis exploratorio")
plot(airq$Temp,airq$Ozone, xlab = "Temperatura (degrees F)", ylab = "Ozone (ppb)")
plot(airq$Temp,airq$Ozone, xlab = "Temperatura (degrees F)", ylab = "Ozone (ppb)")
airquality
head(airquality)
summary(airquality)
dim(airquality)
complete.cases(airquality)
airq <- airquality[complete.cases(airquality),]
summary(airq)
dim(airq)
cor.data <- cor(airq)
cor.data
plot(cor.data)
plot(airq)
plot(airq$Temp,airq$Ozone, xlab = "Temperatura (degrees F)", ylab = "Ozone (ppb)")
plot(airq$Temp,airq$Ozone, xlab = "Temperatura (degrees F)", ylab = "Ozone (ppb)" ,
setwd("D:/CURSO_R2/Procesamienot de datos")
airq <- airquality[complete.cases(airquality),]
airquality
head(airquality)
summary(airquality)
dim(airquality)
complete.cases(airquality)
airq <- airquality[complete.cases(airquality),]
summary(airq)
#para ver el numero de observaciones
dim(airq)
cor.data <- cor(airq)
cor.data
plot(cor.data)
plot(airq)
plot(cor.data)
plot(airq)
plot(airq$Temp,airq$Ozone, xlab = "Temperatura (degrees F)", ylab = "Ozone (ppb)")
?plot
#configurar etiquetas
plot(airq$Temp,airq$Ozone, xlab = "Temperatura (degrees F)", ylab = "Ozone (ppb)" ,
pch = 20, col = "red", main = "Temp vs Ozone")
library(tidyr)
library(dplyr)
library(ggplot2)
plot(cor.data)
plot(airq)
plot(airq$Temp,airq$Ozone, xlab = "Temperatura (degrees F)", ylab = "Ozone (ppb)" ,
pch = 20, col = "red", main = "Temp vs Ozone")
library(MASS)
install.packages("MAAS")
library(tidyr)
library(dplyr)
library(ggplot2)
#1. Realice los siguientes pasos para explorar la base de datos fgl
fgl
ncol(fgl)
nrow(fgl)
head(fgl)
plot(fgl)
#Genere un gráfico de la concentración de óxido de magnesio (Mg)
#versus el índice de refracción (RI), con estas características
plot(fgl$Mg,fgl$RI, xlab = "Mg concentration (ppm)", ylab = "Reflexive index" ,
pch = 20, col = "red", main = "Concentración MgO vs Indice de refracción")
plot(fgl$Mg,fgl$RI, xlab = "Mg concentration (ppm)", ylab = "Reflexive index" ,
pch = 20, col = "red", main = "Concentración MgO vs Indice de refracción", las =1)
boxplot(fgl$RI)
library(ggplot2)
#2. Análisis exploratorio de la base de datos de plátano
#Leer el archivo eventos_de_platano.csv, especificar row.names.
platano_1 <- read.csv("Datos/eventos_de_platano.csv", stringsAsFactors = T)
platano_1
head(platano_1)
row.names(platano_1)
summary(platano_1)
#Ajustar el formato de la fecha, utilizando la función as.Date
is(platano_1)
platano_2 <- tibble(platano_1)
is(platano_2)
is(platano_1$FECHA_SIEMBRA)
is(as.Date(platano_1$FECHA_SIEMBRA,"%m/%d/%Y"))
platano_2 <- platano_2%>%mutate(FECHA_SIEMBRA=as.Date(FECHA_SIEMBRA,"%m/%d/%Y"))
platano_2
#Calcular el rendimiento (PN_ANIO/AREA_UM) y agregarlo directamente usando $.
rendimiento <- platano_2$PN_ANIO/platano_2$AREA_UM
rendimiento
platano_2 <- cbind(plantano_2, rendimiento)
head(platano_2)
#Realizar análisis exploratorio de datos para cada una de las variables de la base de datos.
#(Medidas de tendencia central y dispersión; complementar con gráficos; hacer matriz de correlación para variables cuantitativas)
#medidas de tendencia central
mean(platano_2$NO_ARBOLES)
mean(platano_2$rendimiento)
mean(platano_2$AREA_UM)
mean(platano_2$ALT_LOTE)
mean(platano_2$EDAD)
median(platano_2$NO_ARBOLES)
median(platano_2$rendimiento)
median(platano_2$AREA_UM)
median(platano_2$ALT_LOTE)
median(platano_2$EDAD)
#medidas de dispercion
#la correlacion solo para base de datos numerica
cor_platano_2 <- cor(platano_2$NO_ARBOLES,platano_2$AREA_UM)
cor_platano_5 <- cor(platano_2$NO_ARBOLES,platano_2$PN_ANIO)
cor_platano_2
#plot para graficar tipo correlacion
plot(cor_platano_2)
#Hacer un gráfico de puntos Edad vs Rendimiento, utilizando la función plot; indique
#la media de rendimiento dentro del gráfico, utilizando abline.
plot(platano_2$EDAD,platano_2$AREA_UM, xlab = "Edad planta", ylab = "rendimiento" ,
pch = 20, col = "red", main = "Correlación edad/rendimiento")
?geom_bar
marco_plantacion <- ggplot(platano_2, aes(x=patro, y=marco)) + geom_bar()
marco_plantacion <- ggplot(platano_2, aes(x=patro, y=marco)) + geom_bar()
library(tidyr)
library(dplyr)
library(ggplot2)
crop_data <- read.csv("Datos/Maize_Cordoba_Crop.csv")
crop_data <- read.csv("Datos/Maize_Cordoba_Crop.csv", stringsAsFactors = T)
summary(crop_data)
head(crop_data)
crop_data
crop_data <- tibble(crop_data)
is(crop_data)
glimpse(crop_data)
crop_data[crop_data$Yield >8,]
crop_data %>% filter(Yield >8, Sowing_Method=="Mecanizado")
agregado <-
crop_data %>% group_by(Sowing_Method,Cultivar) %>% summarise(
Avg_Yield = mean(Yield), Avg_LC = mean(Length_Cycle,na.rm=T), n = n()
)
agregado %>% arrange(desc(n))
crop_data2 <- crop_data %>% mutate(fecha = as.character(Harvest_Date)) %>%
separate(fecha, c("Anio","MEs", "Dia"), sep = "-")
crop_data2
crop_data2 %>% mutate(Anio = as.numeric(Anio))
summary(crop_data2)
fcrop_data2 <- crop_data2%>% filter(Anio >= 2015)
fcrop_data2
summary(fcrop_data2)
crop_data2 %>% group_by(Former_Crop) %>%
summarise(PromedioY = mean(Yield), MedianaY = median(Yield))
fcrop_data2 <- fcrop_data2 %>% arrange(PromedioY )
library(tidyr)
library(dplyr)
library(ggplot2)
airquality
head(airquality)
summary(airquality)
dim(airquality)
complete.cases(airquality)
#extraer posiciones seusa corchete
airq <- airquality[complete.cases(airquality),]
summary(airq)
dim(airq)
cor.data <- cor(airq)
?cor
#diferentes tes de correlacion, pearson q evalua la dependencia linea y si tienen distribucion norla
cor.data
#cual es a correlacion mas alta entre variables
#plot para graficar tipo correlacion
plot(cor.data)
plot(airq)
plot(airq$Temp,airq$Ozone, xlab = "Temperatura (degrees F)", ylab = "Ozone (ppb)")
plot(airq$Temp,airq$Ozone, xlab = "Temperatura (degrees F)", ylab = "Ozone (ppb)" ,
pch = 20, col = "red", main = "Temp vs Ozone")
hist(airquality$Ozone, breaks = 13, ylim = c(0,30), col='orange', xlab="", main="")
box()
abline(v = mean(airquality$Ozone, na.rm = T), lty = 2)
#poner un texto de la media
text(50,25, "MU = 42.13")
#rug
rug(airquality$Ozone)
hist(platano_2$EDAD, breaks = 13, ylim = c(0,30), col='orange', xlab="", main="")
box()
box()
hist(platano_2$EDAD, breaks = 13, ylim = c(), col='orange', xlab="", main="")
box()
plot(platano_2$EDAD, breaks = 13, ylim = c(), col='orange', xlab="", main="")
box()
plot(platano_2$EDAD,platano_2$AREA_UM, xlab = "Edad planta", ylab = "rendimiento" ,
pch = 20, col = "red", main = "Correlación edad/rendimiento")
library(MASS)
install.packages("MAAS")
library(tidyr)
library(dplyr)
library(ggplot2)
fgl
ncol(fgl)
nrow(fgl)
head(fgl)
plot(fgl)
plot(fgl$Mg,fgl$RI, xlab = "Mg concentration (ppm)", ylab = "Reflexive index" ,
pch = 20, col = "red", main = "Concentración MgO vs Indice de refracción")
plot(fgl$Mg,fgl$RI, xlab = "Mg concentration (ppm)", ylab = "Reflexive index" ,
pch = 20, col = "red", main = "Concentración MgO vs Indice de refracción", las =1)
boxplot(fgl$RI)
library(ggplot2)
platano_1 <- read.csv("Datos/eventos_de_platano.csv", stringsAsFactors = T)
platano_1
head(platano_1)
row.names(platano_1)
summary(platano_1)
is(platano_1)
platano_2 <- tibble(platano_1)
is(platano_2)
is(platano_1$FECHA_SIEMBRA)
is(as.Date(platano_1$FECHA_SIEMBRA,"%m/%d/%Y"))
platano_2 <- platano_2%>%mutate(FECHA_SIEMBRA=as.Date(FECHA_SIEMBRA,"%m/%d/%Y"))
platano_2
rendimiento <- platano_2$PN_ANIO/platano_2$AREA_UM
rendimiento
platano_2 <- cbind(plantano_2, rendimiento)
head(platano_2)
mean(platano_2$NO_ARBOLES)
mean(platano_2$rendimiento)
mean(platano_2$AREA_UM)
mean(platano_2$ALT_LOTE)
mean(platano_2$EDAD)
median(platano_2$NO_ARBOLES)
median(platano_2$rendimiento)
median(platano_2$AREA_UM)
median(platano_2$ALT_LOTE)
median(platano_2$EDAD)
cor_platano_2 <- cor(platano_2$NO_ARBOLES,platano_2$AREA_UM)
cor_platano_5 <- cor(platano_2$NO_ARBOLES,platano_2$PN_ANIO)
plot(cor_platano_2)
plot(platano_2$EDAD,platano_2$AREA_UM, xlab = "Edad planta", ylab = "rendimiento" ,
pch = 20, col = "red", main = "Correlación edad/rendimiento")
abline(v = mean(platano_2$rendimiento, na.rm = T), lty = 2)
text(50,25, "MU = 42.13")
plot(platano_2$EDAD,platano_2$AREA_UM, xlab = "Edad planta", ylab = "rendimiento" ,
pch = 20, col = "red", main = "Correlación edad/rendimiento")
plot(platano_2$EDAD, breaks = 13, ylim = c(), col='orange', xlab="", main="")
box()
#ablime para poner la media
abline(v = mean(platano_2$rendimiento, na.rm = T), lty = 2)
plot(platano_2$EDAD,platano_2$AREA_UM, xlab = "Edad planta", ylab = "rendimiento" ,
pch = 20, col = "red", main = "Correlación edad/rendimiento")
abline(v = mean(platano_2$rendimiento, na.rm = T), lty = 2)
text(50,25, "MU = 42.13")
trigo <- read.csv("Datos/baseTrigo.csv", row.names = 1, stringsAsFactors = T)
setwd("D:/CURSO_R2/Analisis exploratorio")
trigo <- read.csv("Datos/baseTrigo.csv", row.names = 1, stringsAsFactors = T)
head(trigo, 10)
head(trigo)
summary(trigo)
brend <- ggplot(trigo, aes(x=Variedad, y=Rend)) + geom_boxplot() +
facet_grid(.~ubicacion) + ylab("Rendimiento ton/ha") + theme_bw()
ggsave("Resultados/boxplotRend.png", brend,
height = 4, width = 6)
ggplot(trigo,aes(x=Rend))+geom_histogram(bins=15, colour="black", fill = "honeydew2") +
ggtitle("Histograma de rendimiento") + theme_bw()
ggplot(trigo,aes(x=Rend))+geom_bar(bins=15, colour="black", fill = "honeydew2") +
ggtitle("Histograma de rendimiento") + theme_bw()
ggplot(trigo,aes(x=Rend))+geom_bar(bins=, colour="black", fill = "honeydew2") +
ggtitle("Histograma de rendimiento") + theme_bw()
ggplot(trigo,aes(x=Rend))+geom_bar(colour="black", fill = "honeydew2") +
ggtitle("Histograma de rendimiento") + theme_bw()
ggplot(trigo,aes(x=Rend))+geom_histogram(bins=15, colour="black", fill = "honeydew2") +
ggtitle("Histograma de rendimiento") + theme_bw()
ggplot(platano_2,aes(x=patron))+geom_histogram(bins=15, colour="black", fill = "honeydew2") +
ggtitle("Histograma de patro") + theme_bw()
brend <- ggplot(trigo,aes(x=Variedad,y=Rend)) + geom_boxplot() +
facet_grid(.~ubicacion) + ylab("Rendimiento (ton/ha)") + theme_bw()
ggsave("Resultados/boxplotRend.png",brend,height = 4,width = 6)
plot(platano_2$EDAD,platano_2$AREA_UM, xlab = "Edad planta", ylab = "rendimiento" ,
pch = 20, col = "red", main = "Correlación edad/rendimiento")
g <- ggplot(mpg, aes(platano_2))
?mpg
g <- ggplot(platano_2, aes(class))
plot(g)
ggplot(platano_2, aes(class))
lot(fgl$Mg,fgl$RI, xlab = "Mg concentration (ppm)", ylab = "Reflexive index" ,
pch = 20, col = "red", main = "Concentración MgO vs Indice de refracción")
plot(fgl$Mg,fgl$RI, xlab = "Mg concentration (ppm)", ylab = "Reflexive index" ,
pch = 20, col = "red", main = "Concentración MgO vs Indice de refracción", las =1)
boxplot(fgl$RI)
library(ggplot2)
#2. Análisis exploratorio de la base de datos de plátano
#Leer el archivo eventos_de_platano.csv, especificar row.names.
platano_1 <- read.csv("Datos/eventos_de_platano.csv", stringsAsFactors = T)
platano_1
head(platano_1)
row.names(platano_1)
summary(platano_1)
#Ajustar el formato de la fecha, utilizando la función as.Date
is(platano_1)
platano_2 <- tibble(platano_1)
is(platano_2)
is(platano_1$FECHA_SIEMBRA)
is(as.Date(platano_1$FECHA_SIEMBRA,"%m/%d/%Y"))
platano_2 <- platano_2%>%mutate(FECHA_SIEMBRA=as.Date(FECHA_SIEMBRA,"%m/%d/%Y"))
platano_2
#Calcular el rendimiento (PN_ANIO/AREA_UM) y agregarlo directamente usando $.
rendimiento <- platano_2$PN_ANIO/platano_2$AREA_UM
rendimiento
platano_2 <- cbind(plantano_2, rendimiento)
head(platano_2)
#Realizar análisis exploratorio de datos para cada una de las variables de la base de datos.
#(Medidas de tendencia central y dispersión; complementar con gráficos; hacer matriz de correlación para variables cuantitativas)
#medidas de tendencia central
mean(platano_2$NO_ARBOLES)
mean(platano_2$rendimiento)
mean(platano_2$AREA_UM)
mean(platano_2$ALT_LOTE)
mean(platano_2$EDAD)
median(platano_2$NO_ARBOLES)
median(platano_2$rendimiento)
median(platano_2$AREA_UM)
median(platano_2$ALT_LOTE)
median(platano_2$EDAD)
#medidas de dispercion
#la correlacion solo para base de datos numerica
cor_platano_2 <- cor(platano_2$NO_ARBOLES,platano_2$AREA_UM)
cor_platano_5 <- cor(platano_2$NO_ARBOLES,platano_2$PN_ANIO)
cor_platano_2
#plot para graficar tipo correlacion
plot(cor_platano_2)
#Hacer un gráfico de puntos Edad vs Rendimiento, utilizando la función plot; indique
#la media de rendimiento dentro del gráfico, utilizando abline.
plot(platano_2$EDAD,platano_2$AREA_UM, xlab = "Edad planta", ylab = "rendimiento" ,
pch = 20, col = "red", main = "Correlación edad/rendimiento")
ggplot(platano_2, aes(class))
g <- ggplot(platano_2, aes(class))
?df
variables <-ggplot(aes(x=patron_usado, y=marco_plantacion)) +
geom_bar(stat="identity")
variables
variables
?mpg
?f1
patron <- ggplot(platano_2, aes(fl))
patron + geom_bar()
plot(platano_2$EDAD,platano_2$AREA_UM, xlab = "Edad planta", ylab = "rendimiento" ,
pch = 20, col = "red", main = "Correlación edad/rendimiento")
atron <- ggplot(platano_2, aes(x=patron,y=marco))
patron + geom_bar()
plot(cor_platano_2)
head(platano_2)
ggplot(platano_2, aes(patron)) +
geom_bar()
ggplot(platano_2, aes(class)) +
geom_bar()
pym <- (platano_2$PATRON_USADO, platano_2$DIBUJO_SIEMBRA)
pym <- (platano_2$PATRON_USADO, platano_2$DIBUJO_SIEMBRA)
ggplot(pym, aes(x)) + geom_bar()
ggplot(pym, aes(x)) + geom_bar()
pym <- c(platano_2$PATRON_USADO, platano_2$DIBUJO_SIEMBRA)
ggplot(pym, aes(x)) + geom_bar()
g + geom_bar(aes(fill = pym))
ggplot(pym, aes(tipos)) + geom_bar()
?iris
head(iris)
head(platano_2)
ggplot(platano_2, aes(x = PATRON_USADO, y = DIBUJO_SIEMBRA,)) +
geom_point() + geom_smooth()
ggplot(platano_2, aes(x = PATRON_USADO, y = DIBUJO_SIEMBRA,)) +
geom_bar() + geom_smooth()
ggplot(platano_2, aes(x = PATRON_USADO, y = DIBUJO_SIEMBRA,)) +
geom_line() + geom_smooth()
ggplot(platano_2, aes(x = PATRON_USADO, y = DIBUJO_SIEMBRA,)) +
geom_point() + geom_smooth()
ggplot(platano_2, aes(x = PATRON_USADO, y = DIBUJO_SIEMBRA,)) +
geom_bar()
g <- ggplot(mpg, aes(class))
g + geom_bar()
?class
g <- ggplot(platano_2, aes(class))
g + geom_bar()
platano_3 <- (platano_2$PATRON_USADO,platano_2$rendimiento)
platano_3 <- c(platano_2$PATRON_USADO,platano_2$rendimiento)
g <- ggplot(platano_3, aes(class))
g + geom_bar()
platano_3
head(platano_3)
p <- c(platano_2$PATRON_USADO,platano_2$rendimiento)
head(p)
?diamonds
head(diamonds)
boxplot(airquality$Solar.R~airquality$Month)
boxplot(diamonds$depth.R~diamonds$cut)
boxplot(diamonds$depth~diamonds$cut)
geom_point(diamonds$depth~diamonds$table)
geom_point(diamonds$depth~diamonds$table)
geom_point(diamonds$table~diamonds$depth)
#Unir base de datos de suelos con un mismo ID
library(tidyr)
library(dplyr)
crop_data <- tibble(read.csv("Datos/Maize_cordoba_crop.csv"))
setwd("D:/CURSO_R2/Procesamienot de datos")
crop_data <- tibble(read.csv("Datos/Maize_cordoba_crop.csv"))
soil_data <- tibble(read.csv("Datos/Maize_cordoba_soil.csv"))
crop_data ; soil_data
alldata <- crop_data %>% left_join(soil_data,by="Soil_ID")
alldata
summary(alldata)
soil_data_low_OM %>% filter(Organic_Matter_Content == "BAJA")
soil_data_low_OM %>% soil_data %>% filter(Organic_Matter_Content == "BAJA")
soil_data_low_OM %>% <- soil_data %>% filter(Organic_Matter_Content == "BAJA")
soil_data_low_OM <- soil_data %>% filter(Organic_Matter_Content == "BAJA")
soil_data_low_OM
crop_data %>% left_join(soil_data_low_OM = c("Soil_ID"="Soil_ID"))
crop_data %>% left_join(soil_data_low_OM, by = c("Soil_ID"="Soil_ID"))
crop_data
crop_data %>% left_join(soil_data_low_OM, by = c("Soil_ID"="Soil_ID"))
library(tidyr)
library(dplyr)
crop_data <- tibble(read.csv("Datos/Maize_cordoba_crop.csv"))
soil_data <- tibble(read.csv("Datos/Maize_cordoba_soil.csv"))
crop_data ; soil_data
alldata <- crop_data %>% left_join(soil_data,by="Soil_ID")
alldata
summary(alldata)
soil_data_low_OM <- soil_data %>% filter(Organic_Matter_Content == "BAJA")
soil_data_low_OM
crop_data %>% left_join(soil_data_low_OM, by = c("Soil_ID"="Soil_ID"))
left_crop <- crop_data %>% left_join(soil_data_low_OM, by = c("Soil_ID"="Soil_ID"))
inner_crop <- crop_data %>% left_join(soil_data_low_OM, by = c("Soil_ID"="Soil_ID"))
inner_crop <- crop_data %>% left_join(soil_data_low_OM, by="Soil_ID"="Soil_ID")
right_crop <- crop_data %>% left_join(soil_data_low_OM, by="Soil_ID"="Soil_ID")
crop_data %>% semi_join(soil_data_low_OM, by="Soil_ID")
band_members
band_instruments
band_members %>% full_join(band_instruments2, by=c("name" = "artist"))
